version: 2

jobs:
  check:
    docker:
      # https://github.com/docker-library/python/issues/155
      # - image: python:3.5.2-alpine
      - image: python:3.5.2
    steps:
      - checkout
      - run: pip install pre-commit
      - run: pre-commit run --all-files

  test-py35:
    docker:
      - image: python:3.5-alpine
        environment:
          CHAMPIONGG_TOKEN: dummy
          LEAGUE_TOKEN: dummy
    steps:
      - run: apk add --no-cache gcc git libc-dev musl-dev openssh-client zlib-dev
      - checkout
      - run: pip install tox
      - run: tox -e py35
      - store_artifacts:
          path: htmlcov
      - store_test_results:
          path: junit.xml
      - run: python setup.py sdist bdist_egg bdist_wheel
      - run: .tox/py35/bin/pyinstaller --onefile league-utils.py
      - persist_to_workspace:
          root: dist
          paths:
            - league_utils-*-py3.5.egg
            - league-utils

  test-py36:
    docker:
      - image: python:3.6-alpine
        environment:
          CHAMPIONGG_TOKEN: dummy
          LEAGUE_TOKEN: dummy
    steps:
      - run: apk add --no-cache git openssh-client
      - checkout
      - run: pip install tox
      - run: tox -e py36
      - store_artifacts:
          path: htmlcov
      - store_test_results:
          path: junit.xml
      - run: python setup.py sdist bdist_egg bdist_wheel
      - persist_to_workspace:
          root: dist
          paths:
            - league-utils-*.tar.gz
            - league_utils-*-py2.py3-none-any.whl
            - league_utils-*-py3.6.egg

  test-py35-dev:
    docker:
      - image: themattrix/tox:latest
        environment:
          CHAMPIONGG_TOKEN: dummy
          LEAGUE_TOKEN: dummy
    steps:
      - run: DEBIAN_FRONTEND=noninteractive apt-get -qy update && apt-get install -qy git ssh
      - checkout
      - run: tox -e py35-dev
      - store_artifacts:
          path: htmlcov
      - store_test_results:
          path: junit.xml

  test-py36-dev:
    docker:
      - image: themattrix/tox:latest
        environment:
          CHAMPIONGG_TOKEN: dummy
          LEAGUE_TOKEN: dummy
    steps:
      - run: DEBIAN_FRONTEND=noninteractive apt-get -qy update && apt-get install -qy git ssh
      - checkout
      - run: tox -e py36-dev
      - store_artifacts:
          path: htmlcov
      - store_test_results:
          path: junit.xml

  test-py37-dev:
    docker:
      - image: themattrix/tox:latest
        environment:
          CHAMPIONGG_TOKEN: dummy
          LEAGUE_TOKEN: dummy
    steps:
      - run: DEBIAN_FRONTEND=noninteractive apt-get -qy update && apt-get install -qy git ssh
      - checkout
      - run: tox -e py37-dev
      - store_artifacts:
          path: htmlcov
      - store_test_results:
          path: junit.xml

  push-image:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run: docker build -t api .
      - deploy:
          name: login to dockerhub
          command: docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
      - deploy:
          name: push image (hash)
          command: |
            docker tag api "thekevjames/league-utils-api:${CIRCLE_BRANCH}-${CIRCLE_SHA1:0:8}"
            docker push "thekevjames/league-utils-api:${CIRCLE_BRANCH}-${CIRCLE_SHA1:0:8}"
      - deploy:
          name: push image (branch)
          command: |
            docker tag api "thekevjames/league-utils-api:${CIRCLE_BRANCH}"
            docker push "thekevjames/league-utils-api:${CIRCLE_BRANCH}"
      - deploy:
          name: push image (latest)
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker tag api thekevjames/league-utils-api:latest
              docker push thekevjames/league-utils-api:latest
            fi

  deploy-tag:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - checkout
      - setup_remote_docker
      - run: docker build -t "thekevjames/league-utils-api:${CIRCLE_TAG}" .
      - deploy:
          name: push tagged image
          command: |
            docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}
            docker push "thekevjames/league-utils-api:${CIRCLE_TAG}"

  deploy-pypi:
    docker:
      - image: python:3.6.2-alpine3.6
    steps:
      - run: pip install twine
      - attach_workspace:
          at: dist
      - deploy:
          name: upload to pypi
          command: twine upload dist/*.tar.gz dist/*.egg dist/*.whl

  deploy-github:
    docker:
      - image: python:3.6.2-alpine3.6
    steps:
      - run: apk add --no-cache curl git openssh-client
      - checkout
      - run:
          name: install github-release
          command: |
            curl -L https://github.com/aktau/github-release/releases/download/v0.7.2/linux-amd64-github-release.tar.bz2 > github-release.tar.bz2
            tar xjf github-release.tar.bz2
            rm -f github-release.tar.bz2
      - deploy:
          name: create GitHub release
          command: |
            git log $(git tag --sort=version:refname | tail -n2 | head -n1)..${CIRCLE_TAG} --pretty=format:'- %s' > release-description.md
            ./bin/linux/amd64/github-release release -t "${CIRCLE_TAG}" || true
            cat release-description.md | ./bin/linux/amd64/github-release edit -t ${CIRCLE_TAG} -d -
      - attach_workspace:
          at: dist
      - deploy:
          name: upload linux binary to GitHub
          command: ./bin/linux/amd64/github-release upload -t ${CIRCLE_TAG} -n league-utils-linux-amd64 -f dist/league-utils

  deploy-production:
    docker:
      - image: docker:17.05.0-ce-git
    steps:
      - deploy:
          name: deploy image
          command: |
            ssh -oStrictHostKeyChecking=no kevin@thekev.in "
              sudo docker service update --image thekevjames/league-utils-api:${CIRCLE_BRANCH}-${CIRCLE_SHA1:0:8} thekevjames_league_utils_api
            "

workflows:
  version: 2
  check-build-and-deploy:
    jobs:
      - check:
          filters:
            tags:
              only: /.*/

      - test-py35:
          filters:
            tags:
              only: /.*/
          requires:
            - check
      - test-py36:
          filters:
            tags:
              only: /.*/
          requires:
            - check
      - test-py35-dev:
          filters:
            tags:
              only: /.*/
          requires:
            - check
      - test-py36-dev:
          filters:
            tags:
              only: /.*/
          requires:
            - check
      - test-py37-dev:
          filters:
            tags:
              only: /.*/
          requires:
            - check

      - push-image:
          context: org-global
          filters:
            tags:
              only: /.*/
          requires:
            - test-py35
            - test-py36
            # TODO: consider allowing dev failures
            - test-py35-dev
            - test-py36-dev
            - test-py37-dev

      - deploy-tag:
          context: org-global
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /[0-9]+\.[0-9]+\.[0-9]+/
          requires:
            - test-py35
            - test-py36
            # TODO: consider allowing dev failures
            - test-py35-dev
            - test-py36-dev
            - test-py37-dev
      - deploy-pypi:
          context: org-global
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /[0-9]+\.[0-9]+\.[0-9]+/
          requires:
            - test-py35
            - test-py36
            # TODO: consider allowing dev failures
            - test-py35-dev
            - test-py36-dev
            - test-py37-dev
      - deploy-github:
          context: org-global
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /[0-9]+\.[0-9]+\.[0-9]+/
          requires:
            - test-py35
            - test-py36
            # TODO: consider allowing dev failures
            - test-py35-dev
            - test-py36-dev
            - test-py37-dev

      - deploy-production:
          context: org-global
          filters:
            branches:
              only: master
            tags:
              only: /.*/
          requires:
            - push-image
